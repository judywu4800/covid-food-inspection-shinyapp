"<br>Updated Time:", inspection_date,
"<br>Critical Flag:", critical_flag),
fillColor = ~pal(score),
fillOpacity = 1,
stroke = F,
radius = 8) %>%
addLegend( pal=pal, values= score_year[[input$year]], opacity=0.9, title = "Score Values", position = "bottomleft" )
})
}
shinyApp(ui,server)
nc_pal= colorNumeric(palette="Blues", domain= Total_spdf_file_2022@data$Total,na.color = 'transparent')
ui <- navbarPage(
theme = bs_theme(bootswatch = "litera"),
"Food Inspectation",
tabPanel("Introduction"),
tabPanel("Static Plots"),
navbarMenu("Interactive Plots",
tabPanel("Interactive Map",
fluidRow(column(6,selectInput("type","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(6,selectInput("time","Year:",
c("2019","2020","2021","2022")))),
fluidRow(leafletOutput("map",height = 1000))),
tabPanel("Comparison between Years",
fluidRow(column(4,selectInput("type_comp","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(4,selectInput("time1","Year:",
c("2019","2020","2021","2022"))),
column(4,selectInput("time2","Year:",
c("2019","2020","2021","2022"),selected = "2020"))),
fluidRow(column(6,leafletOutput("map_comp1",height=600)), column(6,leafletOutput("map_comp2",height=600)))),
tabPanel("Top 100 Restaurant",
fluidRow(selectInput("year","Top 100 Restaurant in Year: ",c("2019","2020","2021","2022"))),
fluidRow(leafletOutput("top100",height = 1000)))),
tabPanel("Reference")
)
server <- function(input, output,session){
#interactive map
output$map <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
#### First Layer of PolyGons
addPolygons(
data = violations[[input$type]][[input$time]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
#interactive map compared by year
output$map_comp1 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time1]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time1]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$map_comp2 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time2]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time2]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$top100 <- renderLeaflet({
palette_purples <- colorRampPalette(colors = c("#bcbddc", "#54278f"))(6)
pal <- colorNumeric(palette_purples,domain=score$score,na.color="transparent")
leaflet()%>%
addProviderTiles("CartoDB")%>%
addCircleMarkers(
data=score_year[[input$year]],
lat = ~latitude,
lng = ~longitude,
popup = ~paste(dba,"Score:", score,
"<br>Cuisine:",cuisine_description,
"<br>Updated Time:", inspection_date,
"<br>Critical Flag:", critical_flag),
fillColor = ~pal(score),
fillOpacity = 1,
stroke = F,
radius = 8) %>%
addLegend( pal=pal, values= score_year[[input$year]]$score, opacity=0.9, title = "Score Values", position = "bottomleft" )
})
}
shinyApp(ui,server)
nc_pal= colorNumeric(palette="Blues", domain= Total_spdf_file_2022@data$Total,na.color = 'transparent')
ui <- navbarPage(
theme = bs_theme(bootswatch = "litera"),
"Food Inspectation",
tabPanel("Introduction"),
tabPanel("Static Plots"),
navbarMenu("Interactive Plots",
tabPanel("Interactive Map",
fluidRow(column(6,selectInput("type","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(6,selectInput("time","Year:",
c("2019","2020","2021","2022")))),
fluidRow(leafletOutput("map",height = 600))),
tabPanel("Comparison between Years",
fluidRow(column(4,selectInput("type_comp","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(4,selectInput("time1","Year:",
c("2019","2020","2021","2022"))),
column(4,selectInput("time2","Year:",
c("2019","2020","2021","2022"),selected = "2020"))),
fluidRow(column(6,leafletOutput("map_comp1",height=600)), column(6,leafletOutput("map_comp2",height=600)))),
tabPanel("Top 100 Restaurant",
fluidRow(selectInput("year","Top 100 Restaurant in Year: ",c("2019","2020","2021","2022"))),
fluidRow(leafletOutput("top100",height = 600)))),
tabPanel("Reference")
)
server <- function(input, output,session){
#interactive map
output$map <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
#### First Layer of PolyGons
addPolygons(
data = violations[[input$type]][[input$time]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
#interactive map compared by year
output$map_comp1 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time1]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time1]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$map_comp2 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time2]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time2]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$top100 <- renderLeaflet({
palette_purples <- colorRampPalette(colors = c("#bcbddc", "#54278f"))(6)
pal <- colorNumeric(palette_purples,domain=score$score,na.color="transparent")
leaflet()%>%
addProviderTiles("CartoDB")%>%
addCircleMarkers(
data=score_year[[input$year]],
lat = ~latitude,
lng = ~longitude,
popup = ~paste(dba,"Score:", score,
"<br>Cuisine:",cuisine_description,
"<br>Updated Time:", inspection_date,
"<br>Critical Flag:", critical_flag),
fillColor = ~pal(score),
fillOpacity = 1,
stroke = F,
radius = 8) %>%
addLegend( pal=pal, values= score_year[[input$year]]$score, opacity=0.9, title = "Score Values", position = "bottomleft" )
})
}
shinyApp(ui,server)
nc_pal= colorNumeric(palette="Blues", domain= Total_spdf_file_2022@data$Total,na.color = 'transparent')
ui <- navbarPage(
theme = bs_theme(bootswatch = "litera"),
"Food Inspectation",
tabPanel("Introduction"),
tabPanel("Static Plots"),
navbarMenu("Interactive Plots",
tabPanel("Interactive Map",
fluidRow(column(6,selectInput("type","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(6,selectInput("time","Year:",
c("2019","2020","2021","2022")))),
fluidRow(leafletOutput("map",height = 500))),
tabPanel("Comparison between Years",
fluidRow(column(4,selectInput("type_comp","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(4,selectInput("time1","Year:",
c("2019","2020","2021","2022"))),
column(4,selectInput("time2","Year:",
c("2019","2020","2021","2022"),selected = "2020"))),
fluidRow(column(6,leafletOutput("map_comp1",height=500)), column(6,leafletOutput("map_comp2",height=500)))),
tabPanel("Top 100 Restaurant",
fluidRow(selectInput("year","Top 100 Restaurant in Year: ",c("2019","2020","2021","2022"))),
fluidRow(leafletOutput("top100",height = 500)))),
tabPanel("Reference")
)
server <- function(input, output,session){
#interactive map
output$map <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
#### First Layer of PolyGons
addPolygons(
data = violations[[input$type]][[input$time]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
#interactive map compared by year
output$map_comp1 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time1]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time1]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$map_comp2 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time2]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time2]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$top100 <- renderLeaflet({
palette_purples <- colorRampPalette(colors = c("#bcbddc", "#54278f"))(6)
pal <- colorNumeric(palette_purples,domain=score$score,na.color="transparent")
leaflet()%>%
addProviderTiles("CartoDB")%>%
addCircleMarkers(
data=score_year[[input$year]],
lat = ~latitude,
lng = ~longitude,
popup = ~paste(dba,"Score:", score,
"<br>Cuisine:",cuisine_description,
"<br>Updated Time:", inspection_date,
"<br>Critical Flag:", critical_flag),
fillColor = ~pal(score),
fillOpacity = 1,
stroke = F,
radius = 8) %>%
addLegend( pal=pal, values= score_year[[input$year]]$score, opacity=0.9, title = "Score Values", position = "bottomleft" )
})
}
shinyApp(ui,server)
nc_pal= colorNumeric(palette="Blues", domain= Total_spdf_file_2022@data$Total,na.color = 'transparent')
palette_purples <- colorRampPalette(colors = c("#bcbddc", "#54278f"))(6)
pal_vio <- colorNumeric(palette_purples,domain=Total_spdf_file_2022@data$Total,na.color="transparent")
ui <- navbarPage(
theme = bs_theme(bootswatch = "litera"),
"Food Inspectation",
tabPanel("Introduction"),
tabPanel("Static Plots"),
navbarMenu("Interactive Plots",
tabPanel("Interactive Map",
fluidRow(column(6,selectInput("type","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(6,selectInput("time","Year:",
c("2019","2020","2021","2022")))),
fluidRow(leafletOutput("map",height = 500))),
tabPanel("Comparison between Years",
fluidRow(column(4,selectInput("type_comp","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(4,selectInput("time1","Year:",
c("2019","2020","2021","2022"))),
column(4,selectInput("time2","Year:",
c("2019","2020","2021","2022"),selected = "2020"))),
fluidRow(column(6,leafletOutput("map_comp1",height=500)), column(6,leafletOutput("map_comp2",height=500)))),
tabPanel("Top 100 Restaurant",
fluidRow(selectInput("year","Top 100 Restaurant in Year: ",c("2019","2020","2021","2022"))),
fluidRow(leafletOutput("top100",height = 500)))),
tabPanel("Reference")
)
server <- function(input, output,session){
#interactive map
output$map <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
#### First Layer of PolyGons
addPolygons(
data = violations[[input$type]][[input$time]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=pal, values= violations[[input$type]][[input$time]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
#interactive map compared by year
output$map_comp1 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time1]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=pal, values= violations[[input$type]][[input$time1]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$map_comp2 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time2]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=pal, values= violations[[input$type]][[input$time2]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$top100 <- renderLeaflet({
palette_purples <- colorRampPalette(colors = c("#bcbddc", "#54278f"))(6)
pal <- colorNumeric(palette_purples,domain=score$score,na.color="transparent")
leaflet()%>%
addProviderTiles("CartoDB")%>%
addCircleMarkers(
data=score_year[[input$year]],
lat = ~latitude,
lng = ~longitude,
popup = ~paste(dba,"Score:", score,
"<br>Cuisine:",cuisine_description,
"<br>Updated Time:", inspection_date,
"<br>Critical Flag:", critical_flag),
fillColor = ~pal(score),
fillOpacity = 1,
stroke = F,
radius = 8) %>%
addLegend( pal=pal, values= score_year[[input$year]]$score, opacity=0.9, title = "Score Values", position = "bottomleft" )
})
}
shinyApp(ui,server)
nc_pal= colorNumeric(palette="Purples", domain= Total_spdf_file_2022@data$Total,na.color = 'transparent')
ui <- navbarPage(
theme = bs_theme(bootswatch = "litera"),
"Food Inspectation",
tabPanel("Introduction"),
tabPanel("Static Plots"),
navbarMenu("Interactive Plots",
tabPanel("Interactive Map",
fluidRow(column(6,selectInput("type","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(6,selectInput("time","Year:",
c("2019","2020","2021","2022")))),
fluidRow(leafletOutput("map",height = 500))),
tabPanel("Comparison between Years",
fluidRow(column(4,selectInput("type_comp","Type of Violations:",
c("Number of Total Violations",
"Number of Crital Violations"))),
column(4,selectInput("time1","Year:",
c("2019","2020","2021","2022"))),
column(4,selectInput("time2","Year:",
c("2019","2020","2021","2022"),selected = "2020"))),
fluidRow(column(6,leafletOutput("map_comp1",height=500)), column(6,leafletOutput("map_comp2",height=500)))),
tabPanel("Top 100 Restaurant",
fluidRow(selectInput("year","Top 100 Restaurant in Year: ",c("2019","2020","2021","2022"))),
fluidRow(leafletOutput("top100",height = 500)))),
tabPanel("Reference")
)
server <- function(input, output,session){
#interactive map
output$map <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
#### First Layer of PolyGons
addPolygons(
data = violations[[input$type]][[input$time]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
#interactive map compared by year
output$map_comp1 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time1]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
group = '2022',
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time1]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$map_comp2 <- renderLeaflet({
leaflet()%>%
addProviderTiles("CartoDB")%>%
addPolygons(
data = violations[[input$type_comp]][[input$time2]],
weight = 0.5,
color = "black",
stroke=TRUE ,
fillOpacity = 1 ,
fillColor = ~nc_pal(Total),
label = ~paste0 ('Total Violations : ' , Total),
highlight = highlightOptions(weight  = 3, color = "red", bringToFront =  T)
)%>%
addLegend( pal=nc_pal, values= violations[[input$type]][[input$time2]]$Total, opacity=0.9, title = "Count of Total Violation", position = "bottomleft" )
})
output$top100 <- renderLeaflet({
palette_purples <- colorRampPalette(colors = c("#bcbddc", "#54278f"))(6)
pal <- colorNumeric(palette_purples,domain=score$score,na.color="transparent")
leaflet()%>%
addProviderTiles("CartoDB")%>%
addCircleMarkers(
data=score_year[[input$year]],
lat = ~latitude,
lng = ~longitude,
popup = ~paste(dba,"Score:", score,
"<br>Cuisine:",cuisine_description,
"<br>Updated Time:", inspection_date,
"<br>Critical Flag:", critical_flag),
fillColor = ~pal(score),
fillOpacity = 1,
stroke = F,
radius = 8) %>%
addLegend( pal=pal, values= score_year[[input$year]]$score, opacity=0.9, title = "Score Values", position = "bottomleft" )
})
}
shinyApp(ui,server)
